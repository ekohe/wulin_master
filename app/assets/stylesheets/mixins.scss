@mixin text-shadow(
  $shadow-1: default,
  $shadow-2: false,
  $shadow-3: false,
  $shadow-4: false,
  $shadow-5: false,
  $shadow-6: false,
  $shadow-7: false,
  $shadow-8: false,
  $shadow-9: false,
  $shadow-10: false
) {
  text-shadow: compact(
    $shadow-1,
    $shadow-2,
    $shadow-3,
    $shadow-4,
    $shadow-5,
    $shadow-6,
    $shadow-7,
    $shadow-8,
    $shadow-9,
    $shadow-10
  );
}

@mixin border-radius($radius: $default-border-radius, $vertical-radius: false) {
  @if $vertical-radius {
    // Webkit doesn't understand the official shorthand syntax for specifying
    // a vertical radius unless so in case there's several we only take the first.
    @include experimental(
      border-radius,
      first-value-of($radius) first-value-of($vertical-radius),
      not -moz,
      -webkit,
      not -o,
      not -ms,
      not -khtml,
      not official
    );
    @include experimental(
      "border-radius",
      $radius unquote("/") $vertical-radius,
      -moz,
      not -webkit,
      -o,
      -ms,
      -khtml,
      official
    );
  } @else {
    @include experimental(border-radius, $radius);
  }
}

@mixin experimental($property, $value) {
  -moz-#{$property}: $value;
  -webkit-#{$property}: $value;
  -o-#{$property}: $value;
  -ms-#{$property}: $value;
  -khtml-#{$property}: $value;
  #{$property}: $value;
}

@mixin opacity($opacity) {
  filter: unquote(
    "progid:DXImageTransform.Microsoft.Alpha(Opacity=#{round($opacity * 100)})"
  );
  opacity: $opacity;
}

@mixin box-shadow(
  $shadow-1: default,
  $shadow-2: false,
  $shadow-3: false,
  $shadow-4: false,
  $shadow-5: false,
  $shadow-6: false,
  $shadow-7: false,
  $shadow-8: false,
  $shadow-9: false,
  $shadow-10: false
) {
  $shadow: compact(
    $shadow-1,
    $shadow-2,
    $shadow-3,
    $shadow-4,
    $shadow-5,
    $shadow-6,
    $shadow-7,
    $shadow-8,
    $shadow-9,
    $shadow-10
  );
  @include experimental(box-shadow, $shadow);
}
