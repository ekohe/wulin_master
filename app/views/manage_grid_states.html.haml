.states_manage_form{:title => "Manage Grid States Configurations"}
  = form_tag "/wulin_master/grid_states_manages/batch_update", remote: true do
    = hidden_field_tag "grid_name", @grid_name
    - default_option = @states_options.find{|x| x.first == 'default'}
    - @states_options.delete default_option
    - @states_options.push(["", ""]) if @states_options.empty?
    .state_field
      = label_tag "Default Configuration: "
      = text_field_tag 'default_state', default_option.first, :disabled => true, :readonly => true
    - @states_options.each do |state_option|
      .state_field.custom
        / = f.hidden_field "id", :value => state_option.last
        = hidden_field_tag 'grid_states[][id]', state_option.last
        / = f.text_field "name", :value => state_option.first
        = text_field_tag 'grid_states[][name]', state_option.first
    .state_submit
      %input.btn.btn-success{:id => 'save_states', :name => "commit", :type => "submit", :value => "Save"}
    %span.error_message


:javascript
  $(function(){
    $(".state_field.custom").simple_clone({
      label: "State ",
      label_colon: true,
      canBeEmpty: true
    });

    var manageForm = $(".states_manage_form form");
    var grid = gridManager.getGrid("#{@grid_name}");
    manageForm.bind('ajax:success', function(data, status, xhr) {
      if(status == "success") {
        $(".states_manage_form").modal('hide');
        var grid_url = grid.path + grid.query;
        $.get(grid_url, function(data){
          grid.container.html(data);
        });
      } else {
        manageForm.find(".error_message").text(status);
      }
    });
  });